// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: reward.proto

package reward

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RewardPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CardID       string         `protobuf:"bytes,3,opt,name=cardID,proto3" json:"cardID,omitempty"`
	Desc         string         `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	RewardType   int32          `protobuf:"varint,5,opt,name=rewardType,proto3" json:"rewardType,omitempty"`
	OperatorType int32          `protobuf:"varint,6,opt,name=operatorType,proto3" json:"operatorType,omitempty"`
	StartTime    int64          `protobuf:"varint,7,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime      int64          `protobuf:"varint,8,opt,name=endTime,proto3" json:"endTime,omitempty"`
	TotalPoint   float64        `protobuf:"fixed64,9,opt,name=totalPoint,proto3" json:"totalPoint,omitempty"`
	UpdateDate   int64          `protobuf:"varint,10,opt,name=updateDate,proto3" json:"updateDate,omitempty"`
	TaskPayloads []*TaskPayload `protobuf:"bytes,11,rep,name=taskPayloads,proto3" json:"taskPayloads,omitempty"`
}

func (x *RewardPayload) Reset() {
	*x = RewardPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reward_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardPayload) ProtoMessage() {}

func (x *RewardPayload) ProtoReflect() protoreflect.Message {
	mi := &file_reward_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardPayload.ProtoReflect.Descriptor instead.
func (*RewardPayload) Descriptor() ([]byte, []int) {
	return file_reward_proto_rawDescGZIP(), []int{0}
}

func (x *RewardPayload) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RewardPayload) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RewardPayload) GetCardID() string {
	if x != nil {
		return x.CardID
	}
	return ""
}

func (x *RewardPayload) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *RewardPayload) GetRewardType() int32 {
	if x != nil {
		return x.RewardType
	}
	return 0
}

func (x *RewardPayload) GetOperatorType() int32 {
	if x != nil {
		return x.OperatorType
	}
	return 0
}

func (x *RewardPayload) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *RewardPayload) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *RewardPayload) GetTotalPoint() float64 {
	if x != nil {
		return x.TotalPoint
	}
	return 0
}

func (x *RewardPayload) GetUpdateDate() int64 {
	if x != nil {
		return x.UpdateDate
	}
	return 0
}

func (x *RewardPayload) GetTaskPayloads() []*TaskPayload {
	if x != nil {
		return x.TaskPayloads
	}
	return nil
}

type TaskPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Desc     string  `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	RewardID string  `protobuf:"bytes,4,opt,name=rewardID,proto3" json:"rewardID,omitempty"`
	Point    float64 `protobuf:"fixed64,5,opt,name=point,proto3" json:"point,omitempty"`
}

func (x *TaskPayload) Reset() {
	*x = TaskPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reward_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskPayload) ProtoMessage() {}

func (x *TaskPayload) ProtoReflect() protoreflect.Message {
	mi := &file_reward_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskPayload.ProtoReflect.Descriptor instead.
func (*TaskPayload) Descriptor() ([]byte, []int) {
	return file_reward_proto_rawDescGZIP(), []int{1}
}

func (x *TaskPayload) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TaskPayload) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TaskPayload) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *TaskPayload) GetRewardID() string {
	if x != nil {
		return x.RewardID
	}
	return ""
}

func (x *TaskPayload) GetPoint() float64 {
	if x != nil {
		return x.Point
	}
	return 0
}

type RewardCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *RewardPayload `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *RewardCreateRequest) Reset() {
	*x = RewardCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reward_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardCreateRequest) ProtoMessage() {}

func (x *RewardCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_reward_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardCreateRequest.ProtoReflect.Descriptor instead.
func (*RewardCreateRequest) Descriptor() ([]byte, []int) {
	return file_reward_proto_rawDescGZIP(), []int{2}
}

func (x *RewardCreateRequest) GetPayload() *RewardPayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type RewardCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RewardCreateReply) Reset() {
	*x = RewardCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reward_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardCreateReply) ProtoMessage() {}

func (x *RewardCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_reward_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardCreateReply.ProtoReflect.Descriptor instead.
func (*RewardCreateReply) Descriptor() ([]byte, []int) {
	return file_reward_proto_rawDescGZIP(), []int{3}
}

func (x *RewardCreateReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RewardCreateReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RewardGetByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RewardGetByIDRequest) Reset() {
	*x = RewardGetByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reward_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardGetByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardGetByIDRequest) ProtoMessage() {}

func (x *RewardGetByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_reward_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardGetByIDRequest.ProtoReflect.Descriptor instead.
func (*RewardGetByIDRequest) Descriptor() ([]byte, []int) {
	return file_reward_proto_rawDescGZIP(), []int{4}
}

func (x *RewardGetByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RewardGetByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool           `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Reward  *RewardPayload `protobuf:"bytes,3,opt,name=reward,proto3" json:"reward,omitempty"`
}

func (x *RewardGetByIDReply) Reset() {
	*x = RewardGetByIDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reward_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardGetByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardGetByIDReply) ProtoMessage() {}

func (x *RewardGetByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_reward_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardGetByIDReply.ProtoReflect.Descriptor instead.
func (*RewardGetByIDReply) Descriptor() ([]byte, []int) {
	return file_reward_proto_rawDescGZIP(), []int{5}
}

func (x *RewardGetByIDReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RewardGetByIDReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RewardGetByIDReply) GetReward() *RewardPayload {
	if x != nil {
		return x.Reward
	}
	return nil
}

type RewardUpdateByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *RewardPayload `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *RewardUpdateByIDRequest) Reset() {
	*x = RewardUpdateByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reward_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardUpdateByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardUpdateByIDRequest) ProtoMessage() {}

func (x *RewardUpdateByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_reward_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardUpdateByIDRequest.ProtoReflect.Descriptor instead.
func (*RewardUpdateByIDRequest) Descriptor() ([]byte, []int) {
	return file_reward_proto_rawDescGZIP(), []int{6}
}

func (x *RewardUpdateByIDRequest) GetPayload() *RewardPayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type RewardUpdateByIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RewardUpdateByIDReply) Reset() {
	*x = RewardUpdateByIDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reward_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardUpdateByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardUpdateByIDReply) ProtoMessage() {}

func (x *RewardUpdateByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_reward_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardUpdateByIDReply.ProtoReflect.Descriptor instead.
func (*RewardUpdateByIDReply) Descriptor() ([]byte, []int) {
	return file_reward_proto_rawDescGZIP(), []int{7}
}

func (x *RewardUpdateByIDReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RewardUpdateByIDReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RewardGetByCardIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RewardGetByCardIDRequest) Reset() {
	*x = RewardGetByCardIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reward_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardGetByCardIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardGetByCardIDRequest) ProtoMessage() {}

func (x *RewardGetByCardIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_reward_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardGetByCardIDRequest.ProtoReflect.Descriptor instead.
func (*RewardGetByCardIDRequest) Descriptor() ([]byte, []int) {
	return file_reward_proto_rawDescGZIP(), []int{8}
}

func (x *RewardGetByCardIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RewardGetByCardIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool             `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Msg     string           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Reward  []*RewardPayload `protobuf:"bytes,3,rep,name=reward,proto3" json:"reward,omitempty"`
}

func (x *RewardGetByCardIDReply) Reset() {
	*x = RewardGetByCardIDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reward_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardGetByCardIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardGetByCardIDReply) ProtoMessage() {}

func (x *RewardGetByCardIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_reward_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardGetByCardIDReply.ProtoReflect.Descriptor instead.
func (*RewardGetByCardIDReply) Descriptor() ([]byte, []int) {
	return file_reward_proto_rawDescGZIP(), []int{9}
}

func (x *RewardGetByCardIDReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RewardGetByCardIDReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RewardGetByCardIDReply) GetReward() []*RewardPayload {
	if x != nil {
		return x.Reward
	}
	return nil
}

var File_reward_proto protoreflect.FileDescriptor

var file_reward_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0xd4, 0x02, 0x0a, 0x0d, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61,
	0x72, 0x64, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x0c, 0x74, 0x61, 0x73, 0x6b, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x22, 0x77, 0x0a,
	0x0b, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x46, 0x0a, 0x13, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x3f,
	0x0a, 0x11, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0x26, 0x0a, 0x14, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6f, 0x0a, 0x12, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2d, 0x0a, 0x06, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x4a, 0x0a, 0x17, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x22, 0x43, 0x0a, 0x15, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x2a, 0x0a, 0x18, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x47, 0x65, 0x74, 0x42, 0x79, 0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x73, 0x0a, 0x16, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x47,
	0x65, 0x74, 0x42, 0x79, 0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2d, 0x0a, 0x06, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x32, 0xb6, 0x02, 0x0a, 0x06, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x42, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x1b, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x49, 0x44, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x4e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1f,
	0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x51, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x42, 0x79, 0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x12,
	0x20, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x47,
	0x65, 0x74, 0x42, 0x79, 0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x47, 0x65, 0x74, 0x42, 0x79, 0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x42, 0x34, 0x5a, 0x32, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x63, 0x61, 0x72, 0x64, 0x2f, 0x61, 0x70,
	0x70, 0x2f, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_reward_proto_rawDescOnce sync.Once
	file_reward_proto_rawDescData = file_reward_proto_rawDesc
)

func file_reward_proto_rawDescGZIP() []byte {
	file_reward_proto_rawDescOnce.Do(func() {
		file_reward_proto_rawDescData = protoimpl.X.CompressGZIP(file_reward_proto_rawDescData)
	})
	return file_reward_proto_rawDescData
}

var file_reward_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_reward_proto_goTypes = []interface{}{
	(*RewardPayload)(nil),            // 0: reward.RewardPayload
	(*TaskPayload)(nil),              // 1: reward.TaskPayload
	(*RewardCreateRequest)(nil),      // 2: reward.RewardCreateRequest
	(*RewardCreateReply)(nil),        // 3: reward.RewardCreateReply
	(*RewardGetByIDRequest)(nil),     // 4: reward.RewardGetByIDRequest
	(*RewardGetByIDReply)(nil),       // 5: reward.RewardGetByIDReply
	(*RewardUpdateByIDRequest)(nil),  // 6: reward.RewardUpdateByIDRequest
	(*RewardUpdateByIDReply)(nil),    // 7: reward.RewardUpdateByIDReply
	(*RewardGetByCardIDRequest)(nil), // 8: reward.RewardGetByCardIDRequest
	(*RewardGetByCardIDReply)(nil),   // 9: reward.RewardGetByCardIDReply
}
var file_reward_proto_depIdxs = []int32{
	1, // 0: reward.RewardPayload.taskPayloads:type_name -> reward.TaskPayload
	0, // 1: reward.RewardCreateRequest.payload:type_name -> reward.RewardPayload
	0, // 2: reward.RewardGetByIDReply.reward:type_name -> reward.RewardPayload
	0, // 3: reward.RewardUpdateByIDRequest.payload:type_name -> reward.RewardPayload
	0, // 4: reward.RewardGetByCardIDReply.reward:type_name -> reward.RewardPayload
	2, // 5: reward.Reward.Create:input_type -> reward.RewardCreateRequest
	4, // 6: reward.Reward.GetByID:input_type -> reward.RewardGetByIDRequest
	6, // 7: reward.Reward.UpdateByID:input_type -> reward.RewardUpdateByIDRequest
	8, // 8: reward.Reward.GetByCardID:input_type -> reward.RewardGetByCardIDRequest
	3, // 9: reward.Reward.Create:output_type -> reward.RewardCreateReply
	5, // 10: reward.Reward.GetByID:output_type -> reward.RewardGetByIDReply
	7, // 11: reward.Reward.UpdateByID:output_type -> reward.RewardUpdateByIDReply
	9, // 12: reward.Reward.GetByCardID:output_type -> reward.RewardGetByCardIDReply
	9, // [9:13] is the sub-list for method output_type
	5, // [5:9] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_reward_proto_init() }
func file_reward_proto_init() {
	if File_reward_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_reward_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reward_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reward_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reward_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reward_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardGetByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reward_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardGetByIDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reward_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardUpdateByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reward_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardUpdateByIDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reward_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardGetByCardIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reward_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardGetByCardIDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_reward_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_reward_proto_goTypes,
		DependencyIndexes: file_reward_proto_depIdxs,
		MessageInfos:      file_reward_proto_msgTypes,
	}.Build()
	File_reward_proto = out.File
	file_reward_proto_rawDesc = nil
	file_reward_proto_goTypes = nil
	file_reward_proto_depIdxs = nil
}
